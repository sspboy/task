
declare module 'ui_selector' {

  import { UiObject } from "./ui_object";
  export declare type PropertyValue = string | number | boolean;
  export interface PropertyOperator {
      ">="?: PropertyValue;
      ">"?: PropertyValue;
      "<"?: PropertyValue;
      "<="?: PropertyValue;
      "="?: PropertyValue;
      "!="?: PropertyValue;
  }
  export declare type PropertyQuery = PropertyValue | PropertyOperator | RegExp;
  export interface SelectorQuery {
      [key: string]: PropertyQuery;
  }
  export declare type UiObjectFilter = (obj: UiObject) => boolean;
  export declare type UiObjectProvider = () => Array<UiObject> | Promise<Array<UiObject>>;
  export declare enum TraversalOrder {
      Normal = 0,
      Reverse = 1
  }
  export declare class UiSelector {
      static defaultUiObjectProvider: UiObjectProvider;
      private filters;
      private target;
      private maxResultCount;
      private minResultCount;
      private _timeout;
      private _maxRetries;
      where(filter: UiObjectFilter | SelectorQuery): this;
      from(target: UiObject | Array<UiObject> | UiSelector | UiObjectProvider): this;
      atMost(max: number): this;
      atLeast(min: number): this;
      timeout(timeout: number): this;
      maxRetries(max: number): this;
      all(): Promise<Array<UiObject>>;
      first(): Promise<UiObject | undefined>;
      last(): Promise<UiObject | undefined>;
      takeAt(i: number): Promise<UiObject | undefined>;
      private find;
      private iterator;
  }
  

}
